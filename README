toiletline
----------------
Single-file framework library for raw terminal applications,
meant to replace a small subset of GNU Readline, and work on both Linux and Windows.

It behaves like a regular shell, while the terminal is in raw mode,
with all features implemented from scratch.

Accepts UTF-8 characters. For very specific cases, parsed UTF-8 may not be valid.

Any help finding bugs is appreciated.

Current features
----------------
- Up/Down to navigate history.
- Right/Left, End/Home to navigate line.
- Enter to submit the line.
- Ctrl-C to exit.

Usage
----------------
Before you include this file in C or C++ file, to create the implementation:
#define TOILETLINE_IMPL

To initialize toiletline mode:
int tl_init(void);

Returns 1 on success.

To read a line while in toiletline mode:
int tl_readline(char *line_buffer, size_t size, const char *prompt);

Submitted input will be written to *line_buffer as a null-terminated string.

Returns:
- 0 when a line was submitted;
- 1 on Ctrl-C,
- 2 when line read exceeded *line_buffer.
- -1 means internal error, and should be unreachable.

To exit:
int tl_exit(void);

Returns 1 on success.

For example program, take a look at example.c.
